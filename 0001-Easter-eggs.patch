From 98798d1ec6785fdad0f8859a821646d3f7caa759 Mon Sep 17 00:00:00 2001
From: Petr Stefan <ptr.stef@gmail.com>
Date: Thu, 29 Mar 2018 00:11:37 +0200
Subject: [PATCH 1/1] Easter eggs ;)

---
 src/components/Groups/ResultsTable/ResultsTable.js | 64 ++++++++++++++++++++++
 src/components/widgets/Badge/Badge.js              | 21 ++++++-
 src/components/widgets/Footer/Footer.js            |  5 +-
 src/pages/Assignment/Assignment.js                 | 27 ++++++++-
 4 files changed, 112 insertions(+), 5 deletions(-)

diff --git a/src/components/Groups/ResultsTable/ResultsTable.js b/src/components/Groups/ResultsTable/ResultsTable.js
index 61722596..05eecaff 100644
--- a/src/components/Groups/ResultsTable/ResultsTable.js
+++ b/src/components/Groups/ResultsTable/ResultsTable.js
@@ -11,6 +11,60 @@ import withLinks from '../../../helpers/withLinks';
 import { LocalizedExerciseName } from '../../helpers/LocalizedNames';
 import { compareAssignments } from '../../helpers/compareAssignments';
 import styles from './ResultsTable.less';
+import UsersName from '../../Users/UsersName/UsersName';
+
+const FirstResultsTableRow = ({
+  userId,
+  assignmentsIds,
+  userStats,
+  isAdmin,
+  renderActions
+}) => {
+  return (
+    <tr>
+      <td>
+        <UsersName
+          id={'ester'}
+          fullName={'Ester LedeckÃ¡'}
+          avatarUrl={
+            'https://www.pyeongchang2018.com/en/game-time/results/OWG2018/resOWG2018/img/bios/photos/3042090.jpg'
+          }
+          size={30}
+          large={false}
+          isVerified={true}
+          noLink={true}
+          currentUserId={''}
+        />
+      </td>
+      {assignmentsIds.map(assignmentId => {
+        let assignmentData = {};
+        if (userStats && userStats.assignments) {
+          const assignment = userStats.assignments.find(
+            assignment => assignment.id === assignmentId
+          );
+          if (assignment !== undefined) {
+            assignmentData = assignment;
+          }
+        }
+        return (
+          <td key={assignmentId}>
+            {assignmentData.points &&
+            Number.isInteger(assignmentData.points.total)
+              ? assignmentData.points.total
+              : '-'}
+            <span style={{ color: 'green' }}>+0.01</span>
+          </td>
+        );
+      })}
+      <td style={{ textAlign: 'right' }}>
+        <b>
+          {'âˆž'}/{userStats && userStats.points ? userStats.points.total : '-'}
+        </b>
+      </td>
+      {isAdmin && <td className="text-right" />}
+    </tr>
+  );
+};
 
 const ResultsTable = ({
   assignments = List(),
@@ -50,6 +104,16 @@ const ResultsTable = ({
       <tbody key={'body'}>
         {(users.length === 0 || assignments.length === 0) &&
           <NoResultsAvailableRow />}
+        {users.length !== 0 &&
+          assignments.length !== 0 &&
+          <FirstResultsTableRow
+            key={'ester'}
+            userId={users[0].id}
+            assignmentsIds={assignmentsIds}
+            userStats={stats.find(stat => stat.userId === users[0].id)}
+            isAdmin={isAdmin}
+            renderActions={renderActions}
+          />}
         {users.length !== 0 &&
           assignments.length !== 0 &&
           users.map(user =>
diff --git a/src/components/widgets/Badge/Badge.js b/src/components/widgets/Badge/Badge.js
index b524ed6f..0a3c6423 100644
--- a/src/components/widgets/Badge/Badge.js
+++ b/src/components/widgets/Badge/Badge.js
@@ -16,6 +16,25 @@ class Badge extends Component {
     this.setState({ failedLoadingImage: true });
   };
 
+  getAvatarUrl = str => {
+    const urls = [
+      'http://www.ksi.mff.cuni.cz/content/avatars/yaghob.jpg',
+      'http://www.ksi.mff.cuni.cz/content/avatars/zavoral.jpg',
+      'http://www.ksi.mff.cuni.cz/content/avatars/bednarek.jpg'
+    ];
+
+    var hash = 0;
+    if (str.length === 0) {
+      return urls[0];
+    }
+    for (let i = 0; i < str.length; i++) {
+      const char = str.charCodeAt(i);
+      hash = (hash << 5) - hash + char;
+      hash = hash & hash; // Convert to 32bit integer
+    }
+    return urls[(hash >>> 0) % 3];
+  };
+
   render() {
     const {
       id,
@@ -33,7 +52,7 @@ class Badge extends Component {
         <div className="pull-left image">
           {!failedLoadingImage &&
             <img
-              src={avatarUrl}
+              src={this.getAvatarUrl(id)}
               alt={fullName}
               className="img-circle"
               onError={this.onFailure}
diff --git a/src/components/widgets/Footer/Footer.js b/src/components/widgets/Footer/Footer.js
index 0ec1aedc..9933b477 100644
--- a/src/components/widgets/Footer/Footer.js
+++ b/src/components/widgets/Footer/Footer.js
@@ -6,10 +6,9 @@ const Footer = ({ version }) =>
   <footer className="main-footer">
     <div className="pull-right hidden-xs">
       <FormattedHTMLMessage
-        id="app.footer.version"
-        defaultMessage="<strong>Version</strong> {version} (<a href='{changelogUrl}' target='_blank'>changelog</a>)"
+        id="app.footer.versionEaster"
+        defaultMessage="<strong>Version</strong> 1.7.ðŸ¥š (<a href='{changelogUrl}' target='_blank'>changelog</a>)"
         values={{
-          version,
           changelogUrl: 'https://github.com/ReCodEx/wiki/wiki/Changelog'
         }}
       />
diff --git a/src/pages/Assignment/Assignment.js b/src/pages/Assignment/Assignment.js
index 263acffc..d5e0b6c7 100644
--- a/src/pages/Assignment/Assignment.js
+++ b/src/pages/Assignment/Assignment.js
@@ -3,7 +3,7 @@ import PropTypes from 'prop-types';
 import ImmutablePropTypes from 'react-immutable-proptypes';
 import { connect } from 'react-redux';
 import { FormattedMessage } from 'react-intl';
-import { Col, Row } from 'react-bootstrap';
+import { Col, Row, Modal } from 'react-bootstrap';
 
 import Button from '../../components/widgets/FlatButton';
 import { LinkContainer } from 'react-router-bootstrap';
@@ -52,6 +52,7 @@ import AssignmentSync from '../../components/Assignments/Assignment/AssignmentSy
 import withLinks from '../../helpers/withLinks';
 
 class Assignment extends Component {
+  state = { luckyOpen: false };
   static loadAsync = ({ assignmentId }, dispatch, userId) =>
     Promise.all([
       dispatch(fetchAssignmentIfNeeded(assignmentId)),
@@ -237,6 +238,12 @@ class Assignment extends Component {
                                 disabled={!canSubmitObj.canSubmit}
                               />}
                           </ResourceRenderer>
+                          <Button
+                            bsStyle="danger"
+                            onClick={() => this.setState({ luckyOpen: true })}
+                          >
+                            {"I'm Feeling Lucky"}
+                          </Button>
                         </p>
                         <SubmitSolutionContainer
                           userId={userId}
@@ -246,6 +253,24 @@ class Assignment extends Component {
                           onReset={init}
                           isOpen={submitting}
                         />
+                        <Modal
+                          bsSize="large"
+                          show={this.state.luckyOpen}
+                          onHide={() => this.setState({ luckyOpen: false })}
+                        >
+                          <Modal.Header closeButton>
+                            {'Uh oh, no free points today ...'}
+                          </Modal.Header>
+                          <Modal.Body>
+                            <img
+                              style={{ width: '100%' }}
+                              src={
+                                'https://recodex.mff.cuni.cz:4000/yaghob.jpg'
+                              }
+                              alt={'Jakub at the beach'}
+                            />
+                          </Modal.Body>
+                        </Modal>
                       </div>}
 
                     {(isStudentOf(assignment.groupId) ||
-- 
2.14.3

